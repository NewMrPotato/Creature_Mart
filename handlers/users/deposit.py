# –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
import sqlite3

# aiogram
from aiogram.enums import ParseMode
from aiogram import types

# –∏–º–ø–æ—Ä—Ç –≤–Ω—É—Ç—Ä–∏ –ø—Ä–æ–µ–∫—Ç–∞
from handlers.users.different_functions import delete_last_messages
from handlers.users.start import get_sum_balance, minimal_sum
from keyboards.inline.inline_buttons import back_to_profile_inline_keyboard, checking_payment_inline_keyboard, \
    maintenance_link
from loader import router, dp, bot


# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–∫–Ω–æ —Å –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π —Å—É–º–º–æ–π –¥–µ–ø–æ–∑–∏—Ç–∞
@router.callback_query(lambda query: query.data == "deposit")
async def deposit_handler(callback: types.CallbackQuery):
    # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    conn = sqlite3.connect('data/database/database_shop.sqlite')
    cursor = conn.cursor()

    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞
    cursor.execute("SELECT status FROM users WHERE tg_id = ?", (callback.from_user.id,))

    result = cursor.fetchone()
    user_status = result[0]

    # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
    cursor.close()
    conn.close()

    if user_status != 'blacklist':
        await delete_last_messages(callback.message)

        # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
        conn = sqlite3.connect('data/database/database_shop.sqlite')
        cursor = conn.cursor()

        # –í—ã–ø–æ–ª–Ω–∏—Ç–µ –∑–∞–ø—Ä–æ—Å
        cursor.execute("""UPDATE users SET status = ? WHERE tg_id = ?""", ('depositing', callback.from_user.id))

        # –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        conn.commit()

        # –ó–∞–∫—Ä–æ–π—Ç–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
        cursor.close()
        conn.close()

        caption = f'üí∏<b>–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞</b>\n\n' \
                  f'<b>–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞:</b>\n' \
                  f'{minimal_sum} RUB\n\n' \
                  f'<i>–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è</i>'

        await callback.message.answer(caption, parse_mode=ParseMode.HTML, reply_markup=back_to_profile_inline_keyboard)
    else:
        await callback.message.answer('–í—ã –±—ã–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫‚ö´Ô∏è \n\n–î–ª—è –≤–∞—Å –¥–æ—Å—Ç—É–ø –∫ –±–æ—Ç—É –∑–∞–ø—Ä–µ—â–µ–Ω!')


# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–∫–Ω–æ —Å –Ω–æ–º–µ—Ä–æ–º –∫–∞—Ä—Ç—ã –¥–ª—è –¥–µ–ø–æ–∑–∏—Ç–∞
@router.callback_query(lambda query: query.data == "way_to_increase_balance_bankcard")
async def deposit_handler(callback: types.CallbackQuery):
    # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    conn = sqlite3.connect('data/database/database_shop.sqlite')
    cursor = conn.cursor()

    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞
    cursor.execute("SELECT status FROM users WHERE tg_id = ?", (callback.from_user.id,))

    result = cursor.fetchone()
    user_status = result[0]

    # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
    cursor.close()
    conn.close()

    if user_status != 'blacklist':
        await delete_last_messages(callback.message)

        # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—É–º–º—ã –¥–ª—è –¥–µ–ø–æ–∑–∏—Ç–∞
        sum_to_pay = await get_sum_balance()

        caption = f'üí∏<b>–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞</b>\n\n' \
                  f'–û–ø–ª–∞—Ç–∏—Ç–µ <b>{sum_to_pay} RUB</b> –ø–æ —Ä–µ–∫–≤–∏–∑–∏—Ç–∞–º, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã–¥–∞—Å—Ç \n' \
                  f'<a href="{maintenance_link}"><b><i>–¢–ï–•. –ü–û–î–î–ï–†–ñ–ö–ê</i></b></a>\n' \
                  f'\n' \
                  f'üßæ<i>–ü–æ—Å–ª–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤—å—Ç–µ –∫–≤–∏—Ç–∞–Ω—Ü–∏—é –≤ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫—É—é –ø–æ–¥–¥–µ—Ä–∂–∫—É</i>'
        await callback.message.answer(caption, parse_mode=ParseMode.HTML, reply_markup=checking_payment_inline_keyboard)
    else:
        await callback.message.answer('–í—ã –±—ã–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫‚ö´Ô∏è \n\n–î–ª—è –≤–∞—Å –¥–æ—Å—Ç—É–ø –∫ –±–æ—Ç—É –∑–∞–ø—Ä–µ—â–µ–Ω!')
